#
# Copyright (c) Microsoft Corporation
# Licensed under the MIT License.
#
# to run manually


name: level0-init-launchpad-stainfra

on:
  workflow_dispatch:

env:
  TF_CLI_ARGS: '-no-color'
  TF_CLI_ARGS_destroy: '-refresh=false'
  ARM_CLIENT_SECRET: ${{ secrets.BOOTSTRAP_SPN_SECRET }}
  ARM_CLIENT_ID: ${{ secrets.BOOTSTRAP_SPN_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_REGISTRY_DISCOVERY_RETRY: 5
  TF_REGISTRY_CLIENT_TIMEOUT: 15
  ROVER_RUNNER: true
  ENV: stainfra
  GIT_LZ_BRANCH: 2203.1

jobs:
  bootstrap-plan:
    name: bootrap-level0-plan
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      max-parallel: 1

    container:
      image: aztfmod/rover:1.3.1-2210.0303
      options: --user 0

    steps:
      - uses: actions/checkout@v2
      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' -t '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

          echo "local user: $(whoami)"
      - name: Bootstrap launchpad plan
        run: |
          git config --global --add safe.directory /__w/caf-terraform-landingzones-platform-starter/caf-terraform-landingzones-platform-starter
          id=$(az storage account list --query "[?tags.caf_tfstate == 'level0' && tags.caf_environment == '${{ env.ENV }}']" -o json | jq -r '.[0].name')
          echo "Storage account: $id"
          if [ "${id}" = "null" ]; then
            /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/landingzones/caf_launchpad \
              -var-folder ${GITHUB_WORKSPACE}/configuration/landingzones/stainfra/level0/launchpad \
              -level level0 \
              -launchpad \
              -parallelism=30 \
              -env ${{ env.ENV }} \
              -tfstate caf_launchpad.tfstate \
              -tfstate_subscription_id ${{ env.ARM_SUBSCRIPTION_ID }} \
              -a plan
          else
            echo "Storage account name : ${id} found. Not launching bootstrap"
          fi
  bootstrap-apply:
    name: bootstrap-level0-apply
    runs-on: ubuntu-latest
    needs: [bootstrap-plan]

    strategy:
      fail-fast: true
      max-parallel: 1
    container:
      image: aztfmod/rover:1.3.1-2210.0303
      options: --user 0

    steps:
      - uses: actions/checkout@v2
      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' -t '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

          echo "local user: $(whoami)"
      - name: Bootstrap launchpad apply
        run: |
          git config --global --add safe.directory /__w/caf-terraform-landingzones-platform-starter/caf-terraform-landingzones-platform-starter
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/landingzones/caf_launchpad \
              -var-folder ${GITHUB_WORKSPACE}/configuration/landingzones/stainfra/level0/launchpad \
              -level level0 \
              -launchpad \
              -parallelism=30 \
              -env ${{ env.ENV }} \
              -tfstate caf_launchpad.tfstate \
              -tfstate_subscription_id ${{ env.ARM_SUBSCRIPTION_ID }} \
              -a apply

  credentials-plan:
    name: credentials-level0-plan
    runs-on: ubuntu-latest
    needs: [bootstrap-apply]

    strategy:
      fail-fast: true
      max-parallel: 1
    container:
      image: aztfmod/rover:1.3.1-2210.0303
      options: --user 0

    steps:
      - uses: actions/checkout@v2
      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' -t '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

          echo "local user: $(whoami)"
      - name:  Credentials launchpad plan
        run: |
          git config --global --add safe.directory /__w/caf-terraform-landingzones-platform-starter/caf-terraform-landingzones-platform-starter
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/landingzones/caf_solution \
              -var-folder ${GITHUB_WORKSPACE}/configuration/landingzones/stainfra/level0/credentials \
              -level level0 \
              -launchpad \
              -parallelism=30 \
              -env ${{ env.ENV }} \
              -tfstate caf_launchpad.tfstate \
              -tfstate_subscription_id ${{ env.ARM_SUBSCRIPTION_ID }} \
              -a plan

  credentials-apply:
    name: credentials-level0-plan
    runs-on: ubuntu-latest
    needs: [credentials-level0-plan]

    strategy:
      fail-fast: true
      max-parallel: 1
    container:
      image: aztfmod/rover:1.3.1-2210.0303
      options: --user 0

    steps:
      - uses: actions/checkout@v2
      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' -t '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

          echo "local user: $(whoami)"
      - name:  Credentials launchpad apply
        run: |
          git config --global --add safe.directory /__w/caf-terraform-landingzones-platform-starter/caf-terraform-landingzones-platform-starter
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/landingzones/caf_solution \
              -var-folder ${GITHUB_WORKSPACE}/configuration/landingzones/stainfra/level0/credentials \
              -level level0 \
              -launchpad \
              -parallelism=30 \
              -env ${{ env.ENV }} \
              -tfstate caf_launchpad.tfstate \
              -tfstate_subscription_id ${{ env.ARM_SUBSCRIPTION_ID }} \
              -a apply